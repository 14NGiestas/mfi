#:def asum_nrm2(f77,f90,mfi,pfxs)
#:set A, B = get_types(pfxs)
subroutine test_${f77}$
    use f77_blas, only: ${f77}$, ${f90}$
    use mfi_blas, only: ${mfi}$, mfi_${f77}$

    integer, parameter :: wp = ${kind(A)}$
    integer, parameter :: N = 20
    ${type(B)}$ :: array(N)
    ${type(A)}$ :: res(4)
    integer :: i

    ! Test sequential array
    array = [(1.0_wp*i,i=1,N)]
    res(1) = ${f77}$(N, array, 1)
    res(3) = ${f90}$(N, array, 1)
    res(2) = mfi_${f77}$(array)
    res(4) = ${mfi}$(array)
    call assert(all(res == res(1)), "different results for sequential array")

    $:random_number(type(B),'array','(N)')
    res(1) = ${f77}$(N, array, 1)
    res(2) = ${f90}$(N, array, 1)
    res(3) = mfi_${f77}$(array)
    res(4) = ${mfi}$(array)
    call assert(all(res == res(1)), "different results for random array")

end subroutine
#:enddef
