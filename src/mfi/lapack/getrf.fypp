#:def getrf(MFI_NAME,F77_NAME,TYPE,KIND,PREFIX)
pure subroutine ${MFI_NAME}$(a, ipiv, info)
@:parameter(integer, wp=${KIND}$)
@:args(${TYPE}$,      inout, a(:,:))
    integer, intent(out), optional, target :: ipiv(:)
@:optional(integer, out, info)
    integer :: m, n, lda, allocation_status, deallocation_status
    integer, pointer :: local_ipiv(:)
    lda = max(1,size(a,1))
    m = size(a,1)
    n = size(a,2)
    allocation_status = 0
    if (present(ipiv)) then
        local_ipiv => ipiv
    else
        allocate(local_ipiv(min(m,n)), stat=allocation_status)
    end if
    if (allocation_status == 0) then
        call ${F77_NAME}$(m,n,a,lda,local_ipiv,local_info)
    else
        local_info = -1000
    end if
    if (.not. present(ipiv)) then
        deallocate(local_ipiv, stat=deallocation_status)
    end if
    if (present(info)) then
        info = local_info
    else if (local_info <= -1000) then
        call mfi_error('${F77_NAME}$', -local_info)
    end if
end subroutine
#:enddef
