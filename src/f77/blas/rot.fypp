#:mute
subroutine {s,d,c,z}rot (
    integer  n,
    type(wp) x(*),
    integer  incx,
    type(wp) y(*),
    integer  incy,
    real(wp) c,
    type(wp) s
)
subroutine {sc,zd}rot (
    integer  n,
    type(wp) x(*),
    integer  incx,
    type(wp) y(*),
    integer  incy,
    real(wp) c,
    real(wp) s
)
#:def rot(name,pfxs)
#:set A, B = get_types(pfxs)
!> ${name.upper()}$ applies a plane rotation.
pure subroutine ${name}$(n, x, incx, y, incy, c, s)
$:imports(pfxs)
@:args(${type(A)}$,   in, x(*), y(*))
@:args(integer,       in, n, incx, incy)
@:args(${real(A)}$,   in, c)
@:args(${type(B)}$,   in, s)
end subroutine
#:enddef
#:endmute
